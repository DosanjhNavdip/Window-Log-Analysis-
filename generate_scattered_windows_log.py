{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "be96f781-6725-4d50-842c-d75543657f93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Progress: 4.0 MB generated...\n",
      "Progress: 7.7 MB generated...\n",
      "Progress: 11.5 MB generated...\n",
      "Progress: 15.2 MB generated...\n",
      "Progress: 19.1 MB generated...\n",
      "Progress: 23.1 MB generated...\n",
      "Progress: 26.9 MB generated...\n",
      "Progress: 30.5 MB generated...\n",
      "Progress: 34.3 MB generated...\n",
      "Progress: 38.5 MB generated...\n",
      "Progress: 42.2 MB generated...\n",
      "Progress: 45.9 MB generated...\n",
      "Progress: 49.6 MB generated...\n",
      "Progress: 53.7 MB generated...\n",
      "Progress: 57.8 MB generated...\n",
      "Progress: 61.8 MB generated...\n",
      "Progress: 65.6 MB generated...\n",
      "Progress: 69.4 MB generated...\n",
      "Progress: 73.2 MB generated...\n",
      "Progress: 76.8 MB generated...\n",
      "Progress: 80.6 MB generated...\n",
      "Progress: 84.3 MB generated...\n",
      "Progress: 88.2 MB generated...\n",
      "Progress: 92.1 MB generated...\n",
      "Progress: 96.1 MB generated...\n",
      "Progress: 100.2 MB generated...\n",
      "Progress: 104.2 MB generated...\n",
      "Progress: 108.0 MB generated...\n",
      "Progress: 111.7 MB generated...\n",
      "Progress: 115.5 MB generated...\n",
      "Progress: 119.4 MB generated...\n",
      "Progress: 123.5 MB generated...\n",
      "Progress: 127.3 MB generated...\n",
      "Progress: 130.8 MB generated...\n",
      "Progress: 134.5 MB generated...\n",
      "Progress: 138.3 MB generated...\n",
      "Progress: 142.1 MB generated...\n",
      "Progress: 146.0 MB generated...\n",
      "Progress: 149.7 MB generated...\n",
      "Progress: 153.5 MB generated...\n",
      "Progress: 157.4 MB generated...\n",
      "Progress: 161.3 MB generated...\n",
      "Progress: 165.2 MB generated...\n",
      "Progress: 169.2 MB generated...\n",
      "Progress: 173.0 MB generated...\n",
      "Progress: 176.5 MB generated...\n",
      "Progress: 180.1 MB generated...\n",
      "Progress: 184.0 MB generated...\n",
      "Progress: 188.0 MB generated...\n",
      "Progress: 191.9 MB generated...\n",
      "Progress: 195.7 MB generated...\n",
      "Progress: 199.3 MB generated...\n",
      "Progress: 203.0 MB generated...\n",
      "Progress: 207.1 MB generated...\n",
      "Progress: 211.1 MB generated...\n",
      "Progress: 214.9 MB generated...\n",
      "Progress: 218.6 MB generated...\n",
      "Progress: 222.4 MB generated...\n",
      "Progress: 226.4 MB generated...\n",
      "Progress: 230.2 MB generated...\n",
      "Progress: 234.2 MB generated...\n",
      "Progress: 237.7 MB generated...\n",
      "Progress: 241.1 MB generated...\n",
      "Progress: 244.9 MB generated...\n",
      "Progress: 248.8 MB generated...\n",
      "Done! Final file: Windows_2k_scattered_ips_250mb.log (250.0 MB)\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "from datetime import datetime, timedelta\n",
    "import os\n",
    "\n",
    "# === CONFIG ===\n",
    "INPUT_FILE = \"Windows_2k.log\"                # Original file in same folder\n",
    "OUTPUT_FILE = \"Windows_2k_scattered_ips_250mb.log\"\n",
    "TARGET_SIZE_MB = 250                         # Target file size\n",
    "SUSPICIOUS_IPS = [\n",
    "    \"203.0.113.50\",\"198.51.100.23\",\"192.0.2.99\",\"45.33.32.156\",\"156.232.10.239\",\n",
    "    \"185.220.101.1\",\"89.248.172.16\",\"91.219.236.15\",\"103.251.167.20\",\"5.189.176.9\"\n",
    "]\n",
    "BENIGN_IPS = [\n",
    "    \"192.168.1.45\",\"10.0.0.12\",\"172.16.5.23\",\"8.8.8.8\",\"1.1.1.1\",\n",
    "    \"104.244.42.1\",\"54.36.148.10\",\"34.214.200.50\",\"23.20.150.1\",\"52.86.12.9\"\n",
    "]\n",
    "USERNAMES = [\"svc_backup\",\"jdoe\",\"admin\",\"svc_update\",\"alice\",\"bob\",\"svc_sync\",\"guest\",\"sysop\",\"svc_monitor\"]\n",
    "\n",
    "# === FUNCTIONS ===\n",
    "def random_ts():\n",
    "    \"\"\"Generate random timestamp in January 2025\"\"\"\n",
    "    start = datetime(2025,1,1)\n",
    "    days = 31\n",
    "    dt = start + timedelta(days=random.randint(0,days-1),\n",
    "                            seconds=random.randint(0,86399))\n",
    "    return dt.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
    "\n",
    "def make_login_event(ip, user, success):\n",
    "    \"\"\"Generate synthetic Windows login event\"\"\"\n",
    "    ev_id = \"4624\" if success else \"4625\"\n",
    "    status = \"An account was successfully logged on.\" if success else \"An account failed to log on.\"\n",
    "    source = \"Microsoft-Windows-Security-Auditing\"\n",
    "    message = f\"EventID={ev_id} User={user} IP={ip} {status}\\n\"\n",
    "    return f\"{random_ts()}, Info                  {source}    {message}\"\n",
    "\n",
    "# === MAIN ===\n",
    "def main():\n",
    "    if not os.path.exists(INPUT_FILE):\n",
    "        print(f\"Error: {INPUT_FILE} not found.\")\n",
    "        return\n",
    "\n",
    "    # Load original file\n",
    "    with open(INPUT_FILE, \"r\", encoding=\"utf-8\", errors=\"ignore\") as f:\n",
    "        lines = f.readlines()\n",
    "\n",
    "    current_size = sum(len(l.encode('utf-8')) for l in lines)\n",
    "    target_size_bytes = TARGET_SIZE_MB * 1024 * 1024\n",
    "    insertions = 0\n",
    "\n",
    "    while current_size < target_size_bytes:\n",
    "        block = []\n",
    "        n = random.randint(200, 800)  # number of events in this block\n",
    "        for _ in range(n):\n",
    "            ip = random.choice(SUSPICIOUS_IPS + BENIGN_IPS * 3)\n",
    "            user = random.choice(USERNAMES)\n",
    "            success = random.random() > 0.25  # 75% success rate\n",
    "            block.append(make_login_event(ip, user, success))\n",
    "\n",
    "        for b in block:\n",
    "            pos = random.randint(0, len(lines))\n",
    "            lines.insert(pos, b)\n",
    "\n",
    "        insertions += 1\n",
    "        current_size = sum(len(l.encode('utf-8')) for l in lines)\n",
    "\n",
    "        if insertions % 50 == 0:\n",
    "            print(f\"Progress: {current_size / (1024*1024):.1f} MB generated...\")\n",
    "\n",
    "    # Save file\n",
    "    with open(OUTPUT_FILE, \"w\", encoding=\"utf-8\") as f:\n",
    "        f.writelines(lines)\n",
    "\n",
    "    print(f\"Done! Final file: {OUTPUT_FILE} ({current_size / (1024*1024):.1f} MB)\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "76f2f700-b508-40a9-91e7-0ba1b6807ef6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
